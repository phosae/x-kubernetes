//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
boilerplate text in generated file header
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1beta1

import (
	transformation "github.com/phosae/x-kubernetes/api-aggregation-lib/pkg/api/transformation"
	v1beta1 "github.com/phosae/x-kubernetes/api/transformation/v1beta1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*v1beta1.Base64)(nil), (*transformation.Base64)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_Base64_To_transformation_Base64(a.(*v1beta1.Base64), b.(*transformation.Base64), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*transformation.Base64)(nil), (*v1beta1.Base64)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_transformation_Base64_To_v1beta1_Base64(a.(*transformation.Base64), b.(*v1beta1.Base64), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta1.Base64Spec)(nil), (*transformation.Base64Spec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_Base64Spec_To_transformation_Base64Spec(a.(*v1beta1.Base64Spec), b.(*transformation.Base64Spec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*transformation.Base64Spec)(nil), (*v1beta1.Base64Spec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_transformation_Base64Spec_To_v1beta1_Base64Spec(a.(*transformation.Base64Spec), b.(*v1beta1.Base64Spec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta1.Base64Status)(nil), (*transformation.Base64Status)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_Base64Status_To_transformation_Base64Status(a.(*v1beta1.Base64Status), b.(*transformation.Base64Status), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*transformation.Base64Status)(nil), (*v1beta1.Base64Status)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_transformation_Base64Status_To_v1beta1_Base64Status(a.(*transformation.Base64Status), b.(*v1beta1.Base64Status), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1beta1_Base64_To_transformation_Base64(in *v1beta1.Base64, out *transformation.Base64, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1beta1_Base64Spec_To_transformation_Base64Spec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_Base64Status_To_transformation_Base64Status(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_Base64_To_transformation_Base64 is an autogenerated conversion function.
func Convert_v1beta1_Base64_To_transformation_Base64(in *v1beta1.Base64, out *transformation.Base64, s conversion.Scope) error {
	return autoConvert_v1beta1_Base64_To_transformation_Base64(in, out, s)
}

func autoConvert_transformation_Base64_To_v1beta1_Base64(in *transformation.Base64, out *v1beta1.Base64, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_transformation_Base64Spec_To_v1beta1_Base64Spec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_transformation_Base64Status_To_v1beta1_Base64Status(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_transformation_Base64_To_v1beta1_Base64 is an autogenerated conversion function.
func Convert_transformation_Base64_To_v1beta1_Base64(in *transformation.Base64, out *v1beta1.Base64, s conversion.Scope) error {
	return autoConvert_transformation_Base64_To_v1beta1_Base64(in, out, s)
}

func autoConvert_v1beta1_Base64Spec_To_transformation_Base64Spec(in *v1beta1.Base64Spec, out *transformation.Base64Spec, s conversion.Scope) error {
	out.FieldPath = in.FieldPath
	return nil
}

// Convert_v1beta1_Base64Spec_To_transformation_Base64Spec is an autogenerated conversion function.
func Convert_v1beta1_Base64Spec_To_transformation_Base64Spec(in *v1beta1.Base64Spec, out *transformation.Base64Spec, s conversion.Scope) error {
	return autoConvert_v1beta1_Base64Spec_To_transformation_Base64Spec(in, out, s)
}

func autoConvert_transformation_Base64Spec_To_v1beta1_Base64Spec(in *transformation.Base64Spec, out *v1beta1.Base64Spec, s conversion.Scope) error {
	out.FieldPath = in.FieldPath
	return nil
}

// Convert_transformation_Base64Spec_To_v1beta1_Base64Spec is an autogenerated conversion function.
func Convert_transformation_Base64Spec_To_v1beta1_Base64Spec(in *transformation.Base64Spec, out *v1beta1.Base64Spec, s conversion.Scope) error {
	return autoConvert_transformation_Base64Spec_To_v1beta1_Base64Spec(in, out, s)
}

func autoConvert_v1beta1_Base64Status_To_transformation_Base64Status(in *v1beta1.Base64Status, out *transformation.Base64Status, s conversion.Scope) error {
	out.Output = in.Output
	return nil
}

// Convert_v1beta1_Base64Status_To_transformation_Base64Status is an autogenerated conversion function.
func Convert_v1beta1_Base64Status_To_transformation_Base64Status(in *v1beta1.Base64Status, out *transformation.Base64Status, s conversion.Scope) error {
	return autoConvert_v1beta1_Base64Status_To_transformation_Base64Status(in, out, s)
}

func autoConvert_transformation_Base64Status_To_v1beta1_Base64Status(in *transformation.Base64Status, out *v1beta1.Base64Status, s conversion.Scope) error {
	out.Output = in.Output
	return nil
}

// Convert_transformation_Base64Status_To_v1beta1_Base64Status is an autogenerated conversion function.
func Convert_transformation_Base64Status_To_v1beta1_Base64Status(in *transformation.Base64Status, out *v1beta1.Base64Status, s conversion.Scope) error {
	return autoConvert_transformation_Base64Status_To_v1beta1_Base64Status(in, out, s)
}
