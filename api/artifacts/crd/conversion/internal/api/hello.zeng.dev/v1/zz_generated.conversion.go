//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
boilerplate text in generated file header
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1

import (
	hellozengdev "zeng.dev/crdconversion/internal/api/hello.zeng.dev"
	v1 "github.com/phosae/x-kubernetes/api/hello.zeng.dev/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*v1.FooList)(nil), (*hellozengdev.FooList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_FooList_To_hellozengdev_FooList(a.(*v1.FooList), b.(*hellozengdev.FooList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*hellozengdev.FooList)(nil), (*v1.FooList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hellozengdev_FooList_To_v1_FooList(a.(*hellozengdev.FooList), b.(*v1.FooList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*hellozengdev.FooSpec)(nil), (*v1.FooSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hellozengdev_FooSpec_To_v1_FooSpec(a.(*hellozengdev.FooSpec), b.(*v1.FooSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*hellozengdev.Foo)(nil), (*v1.Foo)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_hellozengdev_Foo_To_v1_Foo(a.(*hellozengdev.Foo), b.(*v1.Foo), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1.FooSpec)(nil), (*hellozengdev.FooSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_FooSpec_To_hellozengdev_FooSpec(a.(*v1.FooSpec), b.(*hellozengdev.FooSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1.Foo)(nil), (*hellozengdev.Foo)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_Foo_To_hellozengdev_Foo(a.(*v1.Foo), b.(*hellozengdev.Foo), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1_Foo_To_hellozengdev_Foo(in *v1.Foo, out *hellozengdev.Foo, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1_FooSpec_To_hellozengdev_FooSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

func autoConvert_hellozengdev_Foo_To_v1_Foo(in *hellozengdev.Foo, out *v1.Foo, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_hellozengdev_FooSpec_To_v1_FooSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	// WARNING: in.Status requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1_FooList_To_hellozengdev_FooList(in *v1.FooList, out *hellozengdev.FooList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]hellozengdev.Foo, len(*in))
		for i := range *in {
			if err := Convert_v1_Foo_To_hellozengdev_Foo(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1_FooList_To_hellozengdev_FooList is an autogenerated conversion function.
func Convert_v1_FooList_To_hellozengdev_FooList(in *v1.FooList, out *hellozengdev.FooList, s conversion.Scope) error {
	return autoConvert_v1_FooList_To_hellozengdev_FooList(in, out, s)
}

func autoConvert_hellozengdev_FooList_To_v1_FooList(in *hellozengdev.FooList, out *v1.FooList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]v1.Foo, len(*in))
		for i := range *in {
			if err := Convert_hellozengdev_Foo_To_v1_Foo(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_hellozengdev_FooList_To_v1_FooList is an autogenerated conversion function.
func Convert_hellozengdev_FooList_To_v1_FooList(in *hellozengdev.FooList, out *v1.FooList, s conversion.Scope) error {
	return autoConvert_hellozengdev_FooList_To_v1_FooList(in, out, s)
}

func autoConvert_v1_FooSpec_To_hellozengdev_FooSpec(in *v1.FooSpec, out *hellozengdev.FooSpec, s conversion.Scope) error {
	// WARNING: in.Msg requires manual conversion: does not exist in peer-type
	// WARNING: in.Msg1 requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_hellozengdev_FooSpec_To_v1_FooSpec(in *hellozengdev.FooSpec, out *v1.FooSpec, s conversion.Scope) error {
	// WARNING: in.Image requires manual conversion: does not exist in peer-type
	// WARNING: in.Config requires manual conversion: does not exist in peer-type
	return nil
}
