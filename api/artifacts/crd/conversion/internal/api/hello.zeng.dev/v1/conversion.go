package v1

import (
	"k8s.io/apimachinery/pkg/conversion"

	hellozengdev "zeng.dev/crdconversion/internal/api/hello.zeng.dev"
	hellov1 "github.com/phosae/x-kubernetes/api/hello.zeng.dev/v1"
)

func Convert_hellozengdev_Foo_To_v1_Foo(in *hellozengdev.Foo, out *hellov1.Foo, s conversion.Scope) error {
	// call func generated by conversion-gen
	// autoConvert_hellozengdev_Foo_To_v1_Foo will call Convert_hellozengdev_FooSpec_To_v1_FooSpec
	if err := autoConvert_hellozengdev_Foo_To_v1_Foo(in, out, s); err != nil {
		return err
	}
	// do conversion here
	if out.Annotations == nil {
		out.Annotations = map[string]string{}
	}
	out.Annotations[AnnotationImage] = in.Spec.Image
	return nil
}

func Convert_hellozengdev_FooSpec_To_v1_FooSpec(in *hellozengdev.FooSpec, out *hellov1.FooSpec, s conversion.Scope) error {
	out.Msg = in.Config.Msg
	out.Msg1 = in.Config.Msg1
	return nil
}

func Convert_v1_Foo_To_hellozengdev_Foo(in *hellov1.Foo, out *hellozengdev.Foo, s conversion.Scope) error {
	// call func generated by conversion-gen
	// autoConvert_v1_Foo_To_hellozengdev_Foo will call Convert_v1_FooSpec_To_hellozengdev_FooSpec
	if err := autoConvert_v1_Foo_To_hellozengdev_Foo(in, out, s); err != nil {
		return err
	}
	// do conversion here
	out.Spec.Image = in.Annotations[AnnotationImage]
	return nil
}

func Convert_v1_FooSpec_To_hellozengdev_FooSpec(in *hellov1.FooSpec, out *hellozengdev.FooSpec, s conversion.Scope) error {
	out.Config.Msg = in.Msg
	out.Config.Msg1 = in.Msg1
	return nil
}
