/*
boilerplate text in generated file header
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v2

import (
	v2 "github.com/phosae/x-kubernetes/api/hello.zeng.dev/v2"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// FooConditionApplyConfiguration represents an declarative configuration of the FooCondition type for use
// with apply.
type FooConditionApplyConfiguration struct {
	Type   *v2.FooConditionType `json:"type,omitempty"`
	Status *v1.ConditionStatus  `json:"status,omitempty"`
}

// FooConditionApplyConfiguration constructs an declarative configuration of the FooCondition type for use with
// apply.
func FooCondition() *FooConditionApplyConfiguration {
	return &FooConditionApplyConfiguration{}
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *FooConditionApplyConfiguration) WithType(value v2.FooConditionType) *FooConditionApplyConfiguration {
	b.Type = &value
	return b
}

// WithStatus sets the Status field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Status field is set to the value of the last call.
func (b *FooConditionApplyConfiguration) WithStatus(value v1.ConditionStatus) *FooConditionApplyConfiguration {
	b.Status = &value
	return b
}
